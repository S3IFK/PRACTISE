{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPdk7fE+kXde2MRxFvDChTw",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/S3IFK/Practise/blob/main/TimeSeries\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "aJZBbLtXJR9R"
      },
      "outputs": [],
      "source": [
        "from io import IncrementalNewlineDecoder\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.read_csv('airline-traffic.csv', header = None)"
      ],
      "metadata": {
        "id": "h7aGm9s0KJ2Y"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "dfYBRz6BKt17",
        "outputId": "3248798c-544f-418e-c15d-e51c7f89c53d"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         0      1\n",
              "0  1949-01  112.0\n",
              "1  1949-02  118.0\n",
              "2  1949-03  132.0\n",
              "3  1949-04  129.0\n",
              "4  1949-05  121.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a5af3646-7f33-4161-a739-be09e5f096e0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1949-01</td>\n",
              "      <td>112.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1949-02</td>\n",
              "      <td>118.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1949-03</td>\n",
              "      <td>132.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1949-04</td>\n",
              "      <td>129.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1949-05</td>\n",
              "      <td>121.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a5af3646-7f33-4161-a739-be09e5f096e0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a5af3646-7f33-4161-a739-be09e5f096e0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a5af3646-7f33-4161-a739-be09e5f096e0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-41142f27-00c1-4a11-99b8-e28cb3212824\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41142f27-00c1-4a11-99b8-e28cb3212824')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-41142f27-00c1-4a11-99b8-e28cb3212824 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.columns = ['Month', 'Passengers']"
      ],
      "metadata": {
        "id": "3DPlnDm8Kw-R"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "CLqPQT27LKVl",
        "outputId": "c00fa961-dc88-45eb-ee12-857613b10d47"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Month  Passengers\n",
              "0  1949-01       112.0\n",
              "1  1949-02       118.0\n",
              "2  1949-03       132.0\n",
              "3  1949-04       129.0\n",
              "4  1949-05       121.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-37c91897-2698-4aa6-8a28-185f368b6b73\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Month</th>\n",
              "      <th>Passengers</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1949-01</td>\n",
              "      <td>112.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1949-02</td>\n",
              "      <td>118.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1949-03</td>\n",
              "      <td>132.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1949-04</td>\n",
              "      <td>129.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1949-05</td>\n",
              "      <td>121.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37c91897-2698-4aa6-8a28-185f368b6b73')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-37c91897-2698-4aa6-8a28-185f368b6b73 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-37c91897-2698-4aa6-8a28-185f368b6b73');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7b2f3a1e-ea96-4f5c-ba7d-19f2427609e1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7b2f3a1e-ea96-4f5c-ba7d-19f2427609e1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7b2f3a1e-ea96-4f5c-ba7d-19f2427609e1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['Month'] = pd.to_datetime(data['Month'], format= '%Y-%m')"
      ],
      "metadata": {
        "id": "iKgQozwcLLjf"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "5COlRDtbLk0k",
        "outputId": "bc0fc271-bd9b-4f9a-b2d2-32119ffffc75"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Month  Passengers\n",
              "0 1949-01-01       112.0\n",
              "1 1949-02-01       118.0\n",
              "2 1949-03-01       132.0\n",
              "3 1949-04-01       129.0\n",
              "4 1949-05-01       121.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-70e0bed5-742f-4246-ae73-b8eba145c3ee\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Month</th>\n",
              "      <th>Passengers</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1949-01-01</td>\n",
              "      <td>112.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1949-02-01</td>\n",
              "      <td>118.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1949-03-01</td>\n",
              "      <td>132.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1949-04-01</td>\n",
              "      <td>129.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1949-05-01</td>\n",
              "      <td>121.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-70e0bed5-742f-4246-ae73-b8eba145c3ee')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-70e0bed5-742f-4246-ae73-b8eba145c3ee button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-70e0bed5-742f-4246-ae73-b8eba145c3ee');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5d410827-a253-4d49-abfc-4193843b6956\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5d410827-a253-4d49-abfc-4193843b6956')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5d410827-a253-4d49-abfc-4193843b6956 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "9C2KVlyWXs-h",
        "outputId": "90760b74-4f5b-411c-f778-a28a698f5906"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Passengers\n",
              "Month                 \n",
              "1949-01-01       112.0\n",
              "1949-02-01       118.0\n",
              "1949-03-01       132.0\n",
              "1949-04-01       129.0\n",
              "1949-05-01       121.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-43721701-d832-41be-bc9b-f5367edd299a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Passengers</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Month</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1949-01-01</th>\n",
              "      <td>112.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1949-02-01</th>\n",
              "      <td>118.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1949-03-01</th>\n",
              "      <td>132.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1949-04-01</th>\n",
              "      <td>129.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1949-05-01</th>\n",
              "      <td>121.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43721701-d832-41be-bc9b-f5367edd299a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-43721701-d832-41be-bc9b-f5367edd299a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-43721701-d832-41be-bc9b-f5367edd299a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f0eb1fa5-6166-4dad-b00a-5c2242ec38a0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f0eb1fa5-6166-4dad-b00a-5c2242ec38a0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f0eb1fa5-6166-4dad-b00a-5c2242ec38a0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data= data.set_index('Month')\n"
      ],
      "metadata": {
        "id": "3qfXdvYXXDbC"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.plot(figsize=(12,5))\n",
        "plt.legend(loc='best')\n",
        "plt.title('Airline Passenger Traffic')\n",
        "plt.show(block=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "wpaD6WLpLmXk",
        "outputId": "1cb769fa-e0f6-4909-9a3b-a0bc01bd5e05"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "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6y2MHz8eycnJGDFiBKZMmXLH2ERERG0dC20iIiILMXXqVBw6dAhXrlzBlStXcPjwYUydOlV3vLy8HF9++SWWLVuG4cOHIzg4GCtXroS1tTW++eabOmP9+9//xuDBgxEcHIxFixbhyJEjqKyshLW1Nezs7CCTyeDp6QlPT09YW1vrrps2bRomTZqETp064b333kNZWRmOHz9utJ8BERGRJZCZOgAiIiJqHDc3N4wcORKxsbEQRREjR46Eq6ur7nhaWhpqamoQGRmpe00ul6Nfv35ISUmpM1bPnj11f/by8gIA5OXl3fN5779eZ2trCwcHB+Tl5bXovoiIiFobFtpEREQWZMaMGZg7dy4AYPny5c0eRy6X6/4sCAIAQKPRNOm629c25joiIqK2hEvHiYiILEhMTAyqq6tRU1OD6OjoOscCAwNhZWWFw4cP616rqalBfHw8goODG/0eVlZWUKvVeouZiIioreGMNhERkQWRSqW6ZeBSqbTOMVtbWzz99NNYuHAhXFxc4Ofnh6VLl+LWrVuYOXNmo9/D398fGRkZSEpKgo+PD+zt7aFQKPR6H0RERK0ZC20iIiIL4+Dg0OCxJUuWQKPR4LHHHkNpaSnCwsKwc+dOODs7N3r8sWPHIi4uDkOHDkVRURFWr16NadOm6SFyIiKitkEQRVE0dRBERERERERErQWf0SYiIiIiIiLSIxbaRERERERERHrEQpuIiIiIiIhIj1hoExEREREREekRC20iIiIiIiIiPWKhTURERERERKRHLLSJiIiIiIiI9IiFNhEREREREZEesdAmIiIiIiIi0iMW2kRERERERER6xEKbiIiIiIiISI/+P4aIKz8iWSs0AAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### Missing Value Treatment\n",
        "\n",
        "## Mean Imputation"
      ],
      "metadata": {
        "id": "jPbJMWfdYCRV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data = data.assign(Passengers_Mean_Imp=data.Passengers.fillna(data.Passengers.mean()))"
      ],
      "metadata": {
        "id": "0wZbuMAvV99k"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data[['Passengers_Mean_Imp']].plot(figsize=(12,4))\n",
        "plt.legend(loc='best')\n",
        "plt.title('AirLine Passengers Traffic: Mean Imp')\n",
        "plt.show(block=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 392
        },
        "id": "-q09FpbBYepU",
        "outputId": "9e8307fe-7a5b-4bb5-8236-a1989e1070ec"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Linear Interpolation"
      ],
      "metadata": {
        "id": "THXmunR5Za4q"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data = data.assign(Passengers_Linear_Int=data.Passengers.interpolate(method= 'linear'))\n",
        "data[['Passengers_Linear_Int']].plot(figsize=(12,4))\n",
        "plt.legend(loc='best')\n",
        "plt.title('AirLine Passengers Traffic: Linear_Intplt')\n",
        "plt.show(block=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 392
        },
        "id": "F4Z9eS8wZAlz",
        "outputId": "1aec0c82-73c3-47e9-e2b1-76145e919a52"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "fDSec3HtaFda"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}